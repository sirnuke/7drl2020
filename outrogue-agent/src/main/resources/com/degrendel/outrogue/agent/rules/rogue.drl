// Comon level rules

package com.degrendel.outrogue.agent.rules

import com.degrendel.outrogue.agent.goals.*
import com.degrendel.outrogue.agent.goals.actions.*
import com.degrendel.outrogue.agent.RogueAgent
import org.slf4j.Logger

global Logger L
global RogueAgent agent

dialect "mvel"

rule "Action goals have evaluated" when
    DecideAction()
    not ActionGoal(selected == true)
    not ActionGoal(evaluated == false)
then end

rule "Select attack action goal" extends "Action goals have evaluated" salience 14 when
    $goal : AttackGoal(applicable == true, $action : action)
then
    L.debug("Selecting attack goal: {}", $goal)
    modify($goal) { selected = true, accomplished = true }
    insert($action)
end

rule "Select explore action goal" extends "Action goals have evaluated" salience 12 when
    $goal : ExploreGoal(applicable == true, $action : action)
then
    L.debug("Selecting explore goal: {}", $goal)
    modify($goal) { selected = true, accomplished = true }
    insert($action)
end

rule "Select sleep action goal" extends "Action goals have evaluated" salience 10 when
    $goal : SleepGoal(applicable == true, $action : action)
then
    L.debug("Selecting sleep action goal: {}", $goal)
    modify($goal) { selected = true, accomplished = true }
    insert($action)
end

rule "Action goal accomplished"
when
    $goal : DecideAction()
    $subgoal : ActionGoal(accomplished == true)
then
    L.debug("Action goal accomplished, done: {}", $subgoal)
    modify($goal) { accomplished = true }
end

