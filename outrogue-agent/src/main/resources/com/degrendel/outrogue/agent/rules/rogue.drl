// Comon level rules

package com.degrendel.outrogue.agent.rules

import com.degrendel.outrogue.agent.goals.*
import com.degrendel.outrogue.agent.goals.actions.*
import com.degrendel.outrogue.agent.RogueAgent
import org.slf4j.Logger

// Salience:
// 100 propose
// 50  apply

global Logger L
global RogueAgent agent

dialect "mvel"

rule "Monitor new decision request"
salience 100
when
    DecideAction()
then
    L.debug("Decide action requested")
end

rule "Monitor new goal"
salience 90
when
    $goal : Goal()
then
    L.debug("New goal: {}", $goal)
end

rule "Select explore action goal"
salience 12
when
    not ActionGoal(selected == true)
    not ActionGoal(evaluated == false)
    $goal : ExploreGoal(applicable == true, $action : action)
then
    L.debug("Selecting explore goal: {}", $goal)
    modify($goal) { selected = true, accomplished = true }
    insert($action)
end

rule "Select sleep action goal"
salience 10
when
    not ActionGoal(selected == true)
    not ActionGoal(evaluated == false)
    $goal : SleepGoal(applicable == true, $action : action)
then
    L.debug("Selecting sleep action goal: {}", $goal)
    modify($goal) { selected = true, accomplished = true }
    insert($action)
end

rule "Action goal accomplished"
when
    $goal : DecideAction()
    $subgoal : ActionGoal(accomplished == true)
then
    L.debug("Action goal accomplished, done: {}", $subgoal)
    modify($goal) { accomplished = true }
end

